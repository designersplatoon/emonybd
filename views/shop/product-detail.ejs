<div class="product-detail">
  <div class="product-image">
    <img src="<%= product.imageUrl %>" alt="<%= product.title %>">
  </div>

  <div class="product-info">
    <h1><%= product.title %></h1>
    <p class="description"><%= product.description %></p>
    <p class="price">Price: Tk<%= product.price %></p>

    <div class="quantity-control">
      <label>Quantity:</label>
      <div class="qty-wrapper">
        <button type="button" onclick="changeQty(-1)">âˆ’</button>
        <input type="number" id="quantity" value="1" min="1" readonly>
        <button type="button" onclick="changeQty(1)">+</button>
      </div>
    </div>

    <button class="add-to-cart-btn"
      onclick="addToCart('<%= product._id %>', '<%= product.title %>', <%= product.price %>)">
      Add to Cart
    </button>

    <button class="order-now-btn"
      onclick="orderNow('<%= product._id %>', '<%= product.title %>', <%= product.price %>)">
      Order Now
    </button>
  </div>
</div>

<div id="toast-container"></div>

<script>
  function changeQty(amount) {
    const qtyInput = document.getElementById('quantity');
    let current = parseInt(qtyInput.value);
    if (isNaN(current)) current = 1;
    current = Math.max(1, current + amount);
    qtyInput.value = current;
  }

  function addToCart(_id, title, price) {
    const quantity = parseInt(document.getElementById('quantity').value) || 1;
    let cart = JSON.parse(localStorage.getItem('cart')) || [];

    const existing = cart.find(item => item._id === _id);
    if (existing) {
      existing.quantity += quantity;
    } else {
      cart.push({ _id, title, price, quantity });
    }

    localStorage.setItem('cart', JSON.stringify(cart));
    showToast(`${quantity} x "${title}" added to cart!`);
  }

  function orderNow(_id, title, price) {
    const quantity = parseInt(document.getElementById('quantity').value) || 1;

    // Overwrite cart with only this product
    const cart = [{ _id, title, price, quantity }];
    localStorage.setItem('cart', JSON.stringify(cart));

    showToast(`${quantity} x "${title}" added to cart. Redirecting to checkout...`);

    // Redirect after delay
    setTimeout(() => {
      window.location.href = '/checkout'; // Replace with your actual checkout route
    }, 1000);
  }

  function showToast(message) {
    const container = document.getElementById('toast-container');
    const toast = document.createElement('div');
    toast.className = 'toast';
    toast.textContent = message;
    container.appendChild(toast);

    setTimeout(() => toast.classList.add('show'), 100);

    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => container.removeChild(toast), 300);
    }, 3000);
  }
</script>

<style>
  /* Optional: Toast styles */
  #toast-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 9999;
  }

  .toast {
    background-color: #333;
    color: #fff;
    padding: 12px 18px;
    border-radius: 4px;
    margin-top: 10px;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.3s, transform 0.3s;
    font-family: sans-serif;
  }

  .toast.show {
    opacity: 1;
    transform: translateY(0);
  }
</style>
